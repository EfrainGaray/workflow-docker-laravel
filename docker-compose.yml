version: '3'
services:
  #PHP Service
  app:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: app
    working_dir: /var/www/
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    volumes:
      - ./src/:/var/www/
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
  #Nginx Service
  webserver:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    container_name: webserver
    working_dir: /var/www/
    restart: unless-stopped
    tty: true
    ports:
      - "8080:8080"
      - "443:443"
    volumes:
      - ./src/:/var/www/
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network
  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3307"
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: dpjJgWKNPSmLVX9sNKHhZCzN5QcnVnSd
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network
  node:
    image: node:latest
    container_name: node
    working_dir: /var/www/
    restart: unless-stopped
    tty: true
    volumes:
      - ./src/:/var/www/
    networks:
      - app-network
  redis:
    image: redis:5.0.3-alpine
    container_name: redis
    stdin_open: true
    volumes:
      - redisdata:/data
    ports:
      - "6379:6379"
    tty: true
    command:
    - redis-server
    - --appendonly
    - 'yes'
    - --requirepass
    - dpjJgWKNPSmLVX9sNKHhZCzN5QcnVnSd
    networks:
      - app-network
#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
  redisdata:
    driver: local